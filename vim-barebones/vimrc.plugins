
" Automatic installation of plugin manager (vim-plug)
let plug_path=has('nvim') ? stdpath('data') . '/autoload/plug.vim'
    \ : $HOME . '/.vim/autoload/plug.vim'
"   If vim-plug doesn't exist, download vim-plug
if empty(glob(plug_path))
    call system(
        \ 'curl' . 
        \ ' -fLo ' . plug_path .
        \ ' --create-dirs' . 
        \ ' https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
        \ )
endif
" Plugin installation (Plugin installation must be inside of .vimrc)
call plug#begin(has('nvim') ? stdpath('data') . '/plugged' : $HOME . '/.vim/plugged')
    " Tagbar (list variables, functions, classes and etc.)
    Plug 'preservim/tagbar'

    " LSP
    Plug 'prabirshrestha/vim-lsp'
    Plug 'mattn/vim-lsp-settings'

    " code completion
    Plug 'prabirshrestha/asyncomplete.vim'
    Plug 'prabirshrestha/asyncomplete-lsp.vim'

    " status bar to show additional information
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'

    " Fuzzy finder (fzf)
    Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
    Plug 'junegunn/fzf.vim'
call plug#end()

" Initial autorun for PlugInstall
"   Run PlugInstall to install plugins automatically
function! s:plug_install_on_initial_launch()
    let dir=has('nvim') ? stdpath('data') . '/plugged' : $HOME . '/.vim/plugged'

    if !isdirectory(dir)
        call execute('PlugInstall')
    endif
endfunction

call s:plug_install_on_initial_launch()
